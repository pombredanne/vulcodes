{
    "identifier": "CVE-2019-1559",
    "summary": "If an application encounters a fatal protocol error and then calls SSL_shutdown() twice (once to send a close_notify, and once to receive one) then OpenSSL can respond differently to the calling application if a 0 byte record is received with invalid padding compared to if a 0 byte record is received with an invalid MAC. If the application then behaves differently based on that in a way that is detectable to the remote peer, then this amounts to a padding oracle that could be used to decrypt data. In order for this to be exploitable \"non-stitched\" ciphersuites must be in use. Stitched ciphersuites are optimised implementations of certain commonly used ciphersuites. Also the application must call SSL_shutdown() twice even if a protocol error has occurred (applications should not do this but some do anyway). AEAD ciphersuites are not impacted.",
    "vulnerable_packages": [
        "pkg:generic/openssl@1.0.2l",
        "pkg:generic/openssl@1.0.2a",
        "pkg:generic/openssl@1.0.2o",
        "pkg:generic/openssl@1.0.2i",
        "pkg:generic/openssl@1.0.2m",
        "pkg:generic/openssl@1.0.2e",
        "pkg:generic/openssl@1.0.2q",
        "pkg:generic/openssl@1.0.2b",
        "pkg:generic/openssl@1.0.2",
        "pkg:generic/openssl@1.0.2n",
        "pkg:generic/openssl@1.0.2d",
        "pkg:generic/openssl@1.0.2j",
        "pkg:generic/openssl@1.0.2c",
        "pkg:generic/openssl@1.0.2f",
        "pkg:generic/openssl@1.0.2k",
        "pkg:generic/openssl@1.0.2p",
        "pkg:generic/openssl@1.0.2g",
        "pkg:generic/openssl@1.0.2h"
    ],
    "resolved_packages": [
        "pkg:generic/openssl@1.0.2r"
    ]
}